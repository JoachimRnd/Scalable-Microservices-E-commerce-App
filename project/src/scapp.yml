version: "3"
services:     # list all services for your application
  # frontend
  frontend:
    image: ${DOCKER_ID}/scapp-frontend:latest
    ports: [ "3002:3000" ]
    environment:
      - PUBLIC_AUTH_SERVICE_URL=http://192.168.56.101:3000
    deploy:
      # deploy 3 instances of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # database of users
  users-db:
    # image name
    image: ${DOCKER_ID}/users-storage-system:latest
    ports: ["3001:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # database of products
  products-db:
    # image name
    image: ${DOCKER_ID}/products-storage-system:latest
    ports: ["3003:5984"]
    deploy:
      # deploy only one instance of this service
      replicas: 1
      restart_policy:
        # restart if something went wrong
        condition: on-failure
    networks: [ "scapp-net" ]
  # server that listens HTTP requests
  users-daemon:
    image: ${DOCKER_ID}/scapp-auth:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "users-db" ]
    # expose port number 3000 of host running this service
    ports: [ "3000:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
    # server that listens HTTP requests
  products-daemon:
    image: ${DOCKER_ID}/scapp-products:latest
    # link both services (same effect of option --link in docker run)
    depends_on: [ "products-db" ]
    # expose port number 3004 of host running this service
    ports: [ "3004:80" ]
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks: [ "scapp-net" ]
  # Docker GUI for swarms
  visualizer:
    image: dockersamples/visualizer:latest
    ports: [ "80:8080" ]
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      # locate this service in the swarm manager
      placement:
        constraints:
          - node.role == manager
    networks: [ "scapp-net" ]
networks:
  scapp-net:
    external: true
